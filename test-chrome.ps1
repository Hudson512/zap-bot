# Script para testar o Chrome/Puppeteer antes de criar sess√µes
# Execute: .\test-chrome.ps1

Write-Host "üîç Verificando instala√ß√£o do Chrome..." -ForegroundColor Cyan

# 1. Verificar se Chrome existe
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
if (Test-Path $chromePath) {
    Write-Host "‚úÖ Chrome encontrado em: $chromePath" -ForegroundColor Green
} else {
    Write-Host "‚ùå Chrome N√ÉO encontrado em: $chromePath" -ForegroundColor Red
    Write-Host "   Por favor, instale o Google Chrome ou atualize o caminho no .env" -ForegroundColor Yellow
    exit 1
}

# 2. Verificar se Node.js est√° instalado
Write-Host "`nüîç Verificando Node.js..." -ForegroundColor Cyan
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js instalado: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js N√ÉO encontrado" -ForegroundColor Red
    exit 1
}

# 3. Verificar depend√™ncias
Write-Host "`nüîç Verificando depend√™ncias..." -ForegroundColor Cyan
if (Test-Path "node_modules") {
    Write-Host "‚úÖ node_modules encontrado" -ForegroundColor Green
    
    if (Test-Path "node_modules\puppeteer") {
        Write-Host "‚úÖ Puppeteer instalado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Puppeteer N√ÉO instalado" -ForegroundColor Red
        Write-Host "   Execute: npm install" -ForegroundColor Yellow
        exit 1
    }
    
    if (Test-Path "node_modules\whatsapp-web.js") {
        Write-Host "‚úÖ whatsapp-web.js instalado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå whatsapp-web.js N√ÉO instalado" -ForegroundColor Red
        Write-Host "   Execute: npm install" -ForegroundColor Yellow
        exit 1
    }
} else {
    Write-Host "‚ùå node_modules N√ÉO encontrado" -ForegroundColor Red
    Write-Host "   Execute: npm install" -ForegroundColor Yellow
    exit 1
}

# 4. Criar script de teste tempor√°rio
Write-Host "`nüîç Testando Chrome com Puppeteer..." -ForegroundColor Cyan

$testScript = @"
const puppeteer = require('puppeteer');

(async () => {
  try {
    console.log('Iniciando Chrome...');
    const browser = await puppeteer.launch({
      executablePath: '$chromePath',
      headless: false,
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage'
      ]
    });
    
    console.log('‚úÖ Chrome aberto com sucesso!');
    
    const page = await browser.newPage();
    console.log('Navegando para WhatsApp Web...');
    
    await page.goto('https://web.whatsapp.com', { 
      waitUntil: 'networkidle2',
      timeout: 30000 
    });
    
    console.log('‚úÖ WhatsApp Web carregado!');
    console.log('Aguardando 5 segundos...');
    
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    await browser.close();
    console.log('‚úÖ Teste conclu√≠do com sucesso!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    process.exit(1);
  }
})();
"@

$testScript | Out-File -FilePath "test-puppeteer-temp.js" -Encoding UTF8

# Executar teste
try {
    node test-puppeteer-temp.js
    $exitCode = $LASTEXITCODE
    
    if ($exitCode -eq 0) {
        Write-Host "`n‚úÖ TODOS OS TESTES PASSARAM!" -ForegroundColor Green
        Write-Host "Seu sistema est√° pronto para criar sess√µes WhatsApp" -ForegroundColor Green
    } else {
        Write-Host "`n‚ùå Teste falhou" -ForegroundColor Red
        Write-Host "Verifique os erros acima" -ForegroundColor Yellow
    }
} catch {
    Write-Host "`n‚ùå Erro ao executar teste: $_" -ForegroundColor Red
} finally {
    # Limpar arquivo tempor√°rio
    if (Test-Path "test-puppeteer-temp.js") {
        Remove-Item "test-puppeteer-temp.js"
    }
}

Write-Host "`nüìã Resumo:" -ForegroundColor Cyan
Write-Host "   - Chrome: $(if (Test-Path $chromePath) { '‚úÖ' } else { '‚ùå' })" -ForegroundColor $(if (Test-Path $chromePath) { 'Green' } else { 'Red' })
Write-Host "   - Node.js: ‚úÖ" -ForegroundColor Green
Write-Host "   - Depend√™ncias: ‚úÖ" -ForegroundColor Green
Write-Host "   - Puppeteer: $(if ($exitCode -eq 0) { '‚úÖ' } else { '‚ùå' })" -ForegroundColor $(if ($exitCode -eq 0) { 'Green' } else { 'Red' })

Write-Host "`nüí° Pr√≥ximo passo:" -ForegroundColor Cyan
Write-Host "   npm start" -ForegroundColor Yellow
Write-Host "   Depois crie uma sess√£o via API" -ForegroundColor White
